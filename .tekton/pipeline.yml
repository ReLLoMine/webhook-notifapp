apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: build-and-deploy
spec:
  workspaces:
  - name: shared-workspace
  - name: git-credentials
  params:
  - name: deployment-name
    type: string
    description: name of the deployment to be patched
  - name: git-url
    type: string
    description: url of the git repo for the code of deployment
  - name: git-revision
    type: string
    description: revision to be used from repo of the code for deployment
    default: master
  - name: IMAGE
    type: string
    description: image to be build from the code
  - name: dockerfile
    type: string
    description: path to the Dockerfile
    default: ./Dockerfile
  - name: context
    type: string
    description: path to the build context
    default: .
  tasks:
  - name: fetch-repository
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: github-repo-clone-task-git-alpine
      - name: namespace
        value: raspberry-project
    workspaces:
    - name: clonedDirectoryFolder
      workspace: shared-workspace
    - name: githubSshFolder
      workspace: git-credentials
    params:
    - name: repoUrl
      value: $(params.git-url)
    - name: deleteExisting
      value: "true"
    - name: revision
      value: $(params.git-revision)
  - name: build-image
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: buildah
      - name: namespace
        value: openshift-pipelines
    params:
    - name: IMAGE
      value: $(params.IMAGE)
    - name: DOCKERFILE
      value: $(params.dockerfile)
    - name: CONTEXT
      value: $(params.context)
    - name: TLS_VERIFY
      value: false
    workspaces:
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - fetch-repository
  - name: apply-manifests
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: apply-manifests
      - name: namespace
        value: raspberry-project
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - build-image
  - name: update-deployment
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: update-deployment
      - name: namespace
        value: raspberry-project
    params:
    - name: deployment
      value: $(params.deployment-name)
    - name: IMAGE
      value: $(params.IMAGE)
    runAfter:
    - apply-manifests